@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    @model Product
}
<div class="row">
    <div class="col-lg-6 mx-auto 0">
        <div class="mb-3">
            <!-- Botón para abrir el carrito con contador de artículos -->
            <a asp-action="Cart" id="floatingCartButton" class="btn btn-outline-primary position-fixed  end-0 m-4 cart-button">
                <i class="bi bi-cart3"></i> Ver Carrito

            </a>
        </div>



        <style>
            /* Aseguramos que el botón esté siempre al frente */
            .cart-button {
                z-index: 1050; /* Superior a cualquier otro contenido */
            }

            #floatingCartButton {
                top: 100px; /* Posición inicial */
                transition: top 0.3s ease-in-out;
                z-index: 1050;
            }
        </style>
        <!-- Product Card -->
        <div class="card mb-3 pt-4" style="max-width: 540px;">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@Model.Url" class="img-fluid rounded-start" alt="@Model.Price">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title text-success">@Model.Name</h5>
                        <p class="card-text">Description : @Model.Description</p>
                        <p class="card-text fw-bold">Price : <span class="product-price">@Model.Price</span> $$</p>
                        <a class="btn btn-link m-3" asp-action="Index">Go Back</a>
                        <button class="btn btn-primary mt-auto add-to-cart" data-product-id="@Model.Id">Agregar al carrito</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Toast de Notificación -->
        <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
            <div id="cartToast" class="toast align-items-center text-bg-success" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
                <div class="d-flex">
                    <div class="toast-body">
                        Producto agregado al carrito.
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
     </<div>

</div>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Inicializar carrito
                loadCartFromLocalStorage();
                updateCart();

                document.querySelectorAll('.add-to-cart').forEach(button => {
                    button.addEventListener('click', function () {
                        const productId = this.getAttribute('data-product-id');
                        const productName = this.getAttribute('data-product-name');
                        const productPrice = parseFloat(this.getAttribute('data-product-price'));

                        addToCart(productId, productName, productPrice);
                    });
                });
            });

            let cart = [];

            // Cargar carrito desde LocalStorage
            function loadCartFromLocalStorage() {
                const storedCart = localStorage.getItem('cart');
                if (storedCart) {
                    cart = JSON.parse(storedCart);
                } else {
                    cart = []; // Si no hay carrito, inicializamos como un array vacío
                }
            }

            // Guardar carrito en LocalStorage
            function saveCartToLocalStorage() {
                localStorage.setItem('cart', JSON.stringify(cart));
            }

            // Agregar producto al carrito
            function addToCart(productId, productName, productPrice) {
                const existingProduct = cart.find(p => p.id === productId);

                if (existingProduct) {
                    existingProduct.quantity++;
                } else {
                    cart.push({
                        id: productId,
                        name: productName,
                        price: productPrice,
                        quantity: 1
                    });
                }

                saveCartToLocalStorage();
                updateCart();
                showCartNotification(productName); // Mostrar notificación
            }

            // Actualizar carrito en la vista
            function updateCart() {
                const cartItemCount = document.getElementById('cartItemCount');
                const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
                cartItemCount.innerText = totalItems;
            }

            // Mostrar notificación de producto agregado
            function showCartNotification(productName) {
                let notificationContainer = document.getElementById('notificationContainer');
                if (!notificationContainer) {
                    notificationContainer = document.createElement('div');
                    notificationContainer.id = 'notificationContainer';
                    notificationContainer.style.position = 'fixed';
                    notificationContainer.style.bottom = '20px';
                    notificationContainer.style.right = '20px';
                    notificationContainer.style.zIndex = '1050';
                    document.body.appendChild(notificationContainer);
                }

                const notification = document.createElement('div');
                notification.className = 'cart-alert alert alert-success';
                notification.innerText = `✅ ${productName} agregado al carrito.`;

                notificationContainer.appendChild(notification);

                setTimeout(() => {
                    notification.style.opacity = "0";
                    notification.style.transition = "opacity 0.5s ease";
                    setTimeout(() => {
                        notification.remove();
                    }, 500);
                }, 3000);
            }
        </script>

        <style>
            /* Estilo de la alerta */
            .cart-alert {
                min-width: 250px;
                max-width: 300px;
                padding: 10px;
                font-size: 1rem;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
                border-radius: 5px;
                margin-bottom: 10px;
                transition: opacity 0.5s ease;
            }
        </style>
